{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import{Provider}from'react-redux';import'./index.css';import App from'./App';import*as serviceWorker from'./serviceWorker';import socketIOClient from'socket.io-client';import configureStore from'./store/configureStore';import{startSetOrders,addOrder}from'./actoins/ordersAction';var store=configureStore();store.dispatch(startSetOrders());var socket=socketIOClient('/');socket.on('new order',function(order){store.dispatch(addOrder(order));});var element=React.createElement(Provider,{store:store},React.createElement(App,null));ReactDOM.render(element,document.getElementById('root'));serviceWorker.unregister();","map":{"version":3,"sources":["/home/shash/web-dev/playground/heroku/shopify/client/src/index.js"],"names":["React","ReactDOM","Provider","App","serviceWorker","socketIOClient","configureStore","startSetOrders","addOrder","store","dispatch","socket","on","order","element","render","document","getElementById","unregister"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAEA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CACA,OAASC,cAAT,CAAyBC,QAAzB,KAAyC,wBAAzC,CAEA,GAAMC,CAAAA,KAAK,CAAGH,cAAc,EAA5B,CACAG,KAAK,CAACC,QAAN,CAAeH,cAAc,EAA7B,EAEA,GAAMI,CAAAA,MAAM,CAAGN,cAAc,CAAC,GAAD,CAA7B,CACAM,MAAM,CAACC,EAAP,CAAU,WAAV,CAAuB,SAACC,KAAD,CAAW,CAClCJ,KAAK,CAACC,QAAN,CAAeF,QAAQ,CAACK,KAAD,CAAvB,EACC,CAFD,EAIA,GAAMC,CAAAA,OAAO,CACT,oBAAC,QAAD,EAAU,KAAK,CAAEL,KAAjB,EACI,oBAAC,GAAD,MADJ,CADJ,CAMAR,QAAQ,CAACc,MAAT,CAAgBD,OAAhB,CAAyBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,EAEAb,aAAa,CAACc,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\nimport socketIOClient from 'socket.io-client'\n\nimport configureStore from './store/configureStore'\nimport { startSetOrders, addOrder } from './actoins/ordersAction'\n\nconst store = configureStore()\nstore.dispatch(startSetOrders())\n\nconst socket = socketIOClient('/')\nsocket.on('new order', (order) => {\nstore.dispatch(addOrder(order))\n})\n\nconst element = (\n    <Provider store={store} >\n        <App />\n    </Provider>\n)\n\nReactDOM.render(element, document.getElementById('root'));\n\nserviceWorker.unregister()"]},"metadata":{},"sourceType":"module"}