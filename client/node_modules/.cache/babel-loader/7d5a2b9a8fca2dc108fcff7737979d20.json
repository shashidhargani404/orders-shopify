{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import Card from'./Card';function TotalMoney(props){var totalIncome=props.incomes.reduce(function(total,income){return total+income.amount;},0);var totalExpense=props.expenses.reduce(function(total,expense){return total+expense.amount;},0);var totalBorrow=props.borrows.filter(function(borrow){return borrow.isPending;}).reduce(function(total,borrow){return total+borrow.amount;},0);var totalLend=props.lends.filter(function(lend){return lend.isPending;}).reduce(function(total,lend){return total+lend.amount;},0);return React.createElement(React.Fragment,null,React.createElement(Card,{total:totalIncome-totalExpense,title:\"Total Saving\",body:\"This is all you save till now.\"}),React.createElement(Card,{total:totalIncome-totalExpense+totalBorrow-totalLend,title:\"Cash on Hand\",body:\"Total money you have with you.\"}),React.createElement(Card,{total:totalBorrow,title:\"Borrowed Money\",body:\"This is what you have to give back.\"}),React.createElement(Card,{total:totalLend,title:\"Lended Money\",body:\"This is what you have to take back.\"}));}var mapStateToProps=function mapStateToProps(state){return{incomes:state.incomes?state.incomes.filter(function(income){return!income.isTrashed;}):[],expenses:state.expenses?state.expenses.filter(function(expense){return!expense.isTrashed;}):[],borrows:state.borrows?state.borrows.filter(function(borrow){return!borrow.isTrashed;}):[],lends:state.lends?state.lends.filter(function(lend){return!lend.isTrashed;}):[]};};export default connect(mapStateToProps)(TotalMoney);","map":{"version":3,"sources":["/home/shash/web-dev/playground/heroku/demo-money/client/src/components/money-math/SideBar/TotalMoney.js"],"names":["React","connect","Card","TotalMoney","props","totalIncome","incomes","reduce","total","income","amount","totalExpense","expenses","expense","totalBorrow","borrows","filter","borrow","isPending","totalLend","lends","lend","mapStateToProps","state","isTrashed"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACvB,GAAMC,CAAAA,WAAW,CAAGD,KAAK,CAACE,OAAN,CAAcC,MAAd,CAAqB,SAACC,KAAD,CAAQC,MAAR,QAAmBD,CAAAA,KAAK,CAAGC,MAAM,CAACC,MAAlC,EAArB,CAA+D,CAA/D,CAApB,CACA,GAAMC,CAAAA,YAAY,CAAGP,KAAK,CAACQ,QAAN,CAAeL,MAAf,CAAsB,SAACC,KAAD,CAAQK,OAAR,QAAoBL,CAAAA,KAAK,CAAGK,OAAO,CAACH,MAApC,EAAtB,CAAkE,CAAlE,CAArB,CACA,GAAMI,CAAAA,WAAW,CAAGV,KAAK,CAACW,OAAN,CAAcC,MAAd,CAAqB,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,SAAX,EAA3B,EAAiDX,MAAjD,CAAwD,SAACC,KAAD,CAAQS,MAAR,QAAmBT,CAAAA,KAAK,CAAGS,MAAM,CAACP,MAAlC,EAAxD,CAAkG,CAAlG,CAApB,CACA,GAAMS,CAAAA,SAAS,CAAGf,KAAK,CAACgB,KAAN,CAAYJ,MAAZ,CAAmB,SAAAK,IAAI,QAAIA,CAAAA,IAAI,CAACH,SAAT,EAAvB,EAA2CX,MAA3C,CAAkD,SAACC,KAAD,CAAQa,IAAR,QAAiBb,CAAAA,KAAK,CAAGa,IAAI,CAACX,MAA9B,EAAlD,CAAwF,CAAxF,CAAlB,CAEA,MACI,yCACI,oBAAC,IAAD,EAAM,KAAK,CAAGL,WAAW,CAAGM,YAA5B,CAA2C,KAAK,CAAC,cAAjD,CAAgE,IAAI,CAAC,gCAArE,EADJ,CAEI,oBAAC,IAAD,EAAM,KAAK,CAAGN,WAAW,CAAGM,YAAd,CAA6BG,WAA7B,CAA2CK,SAAzD,CAAqE,KAAK,CAAC,cAA3E,CAA0F,IAAI,CAAC,gCAA/F,EAFJ,CAGI,oBAAC,IAAD,EAAM,KAAK,CAAGL,WAAd,CAA4B,KAAK,CAAC,gBAAlC,CAAmD,IAAI,CAAC,qCAAxD,EAHJ,CAII,oBAAC,IAAD,EAAM,KAAK,CAAGK,SAAd,CAA0B,KAAK,CAAC,cAAhC,CAA+C,IAAI,CAAC,qCAApD,EAJJ,CADJ,CAQH,CAED,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAO,CACHjB,OAAO,CAAEiB,KAAK,CAACjB,OAAN,CAAgBiB,KAAK,CAACjB,OAAN,CAAcU,MAAd,CAAqB,SAAAP,MAAM,QAAI,CAACA,MAAM,CAACe,SAAZ,EAA3B,CAAhB,CAAoE,EAD1E,CAEHZ,QAAQ,CAAEW,KAAK,CAACX,QAAN,CAAiBW,KAAK,CAACX,QAAN,CAAeI,MAAf,CAAsB,SAAAH,OAAO,QAAI,CAACA,OAAO,CAACW,SAAb,EAA7B,CAAjB,CAAwE,EAF/E,CAGHT,OAAO,CAAEQ,KAAK,CAACR,OAAN,CAAgBQ,KAAK,CAACR,OAAN,CAAcC,MAAd,CAAqB,SAAAC,MAAM,QAAI,CAACA,MAAM,CAACO,SAAZ,EAA3B,CAAhB,CAAoE,EAH1E,CAIHJ,KAAK,CAAEG,KAAK,CAACH,KAAN,CAAcG,KAAK,CAACH,KAAN,CAAYJ,MAAZ,CAAmB,SAAAK,IAAI,QAAI,CAACA,IAAI,CAACG,SAAV,EAAvB,CAAd,CAA4D,EAJhE,CAAP,CAMH,CAPD,CASA,cAAevB,CAAAA,OAAO,CAACqB,eAAD,CAAP,CAAyBnB,UAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport Card from './Card'\n\nfunction TotalMoney(props) {\n    const totalIncome = props.incomes.reduce((total, income) => total + income.amount, 0)\n    const totalExpense = props.expenses.reduce((total, expense) => total + expense.amount, 0)\n    const totalBorrow = props.borrows.filter(borrow => borrow.isPending).reduce((total, borrow) => total + borrow.amount, 0)\n    const totalLend = props.lends.filter(lend => lend.isPending).reduce((total, lend) => total + lend.amount, 0)\n    \n    return (\n        <>\n            <Card total={ totalIncome - totalExpense } title=\"Total Saving\" body=\"This is all you save till now.\" />\n            <Card total={ totalIncome - totalExpense + totalBorrow - totalLend } title=\"Cash on Hand\" body=\"Total money you have with you.\" />\n            <Card total={ totalBorrow } title=\"Borrowed Money\" body=\"This is what you have to give back.\" />\n            <Card total={ totalLend } title=\"Lended Money\" body=\"This is what you have to take back.\" />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        incomes: state.incomes ? state.incomes.filter(income => !income.isTrashed) : [],\n        expenses: state.expenses ? state.expenses.filter(expense => !expense.isTrashed) : [],\n        borrows: state.borrows ? state.borrows.filter(borrow => !borrow.isTrashed) : [],\n        lends: state.lends ? state.lends.filter(lend => !lend.isTrashed) : []\n    }\n}\n\nexport default connect(mapStateToProps)(TotalMoney)"]},"metadata":{},"sourceType":"module"}