{"ast":null,"code":"var _jsxFileName = \"/home/shash/web-dev/playground/heroku/demo-money-local/client/src/components/money-math/SideBar/TotalMoney.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Card from './Card';\n\nfunction TotalMoney(props) {\n  const totalIncome = props.incomes.reduce((total, income) => total + income.amount, 0);\n  const totalExpense = props.expenses.reduce((total, expense) => total + expense.amount, 0);\n  const totalBorrow = props.borrows.filter(borrow => borrow.isPending).reduce((total, borrow) => total + borrow.amount, 0);\n  const totalLend = props.lends.filter(lend => lend.isPending).reduce((total, lend) => total + lend.amount, 0);\n  return React.createElement(React.Fragment, null, React.createElement(Card, {\n    total: totalIncome - totalExpense,\n    title: \"Total Saving\",\n    body: \"This is all you save till now.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Card, {\n    total: totalIncome - totalExpense + totalBorrow - totalLend,\n    title: \"Cash on Hand\",\n    body: \"Total money you have with you.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Card, {\n    total: totalBorrow,\n    title: \"Borrowed Money\",\n    body: \"This is what you have to give back.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(Card, {\n    total: totalLend,\n    title: \"Lended Money\",\n    body: \"This is what you have to take back.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    incomes: state.incomes.filter(income => !income.isTrashed),\n    expenses: state.expenses.filter(expense => !expense.isTrashed),\n    borrows: state.borrows.filter(borrow => !borrow.isTrashed),\n    lends: state.lends.filter(lend => !lend.isTrashed)\n  };\n};\n\nexport default connect(mapStateToProps)(TotalMoney);","map":{"version":3,"sources":["/home/shash/web-dev/playground/heroku/demo-money-local/client/src/components/money-math/SideBar/TotalMoney.js"],"names":["React","connect","Card","TotalMoney","props","totalIncome","incomes","reduce","total","income","amount","totalExpense","expenses","expense","totalBorrow","borrows","filter","borrow","isPending","totalLend","lends","lend","mapStateToProps","state","isTrashed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAMC,WAAW,GAAGD,KAAK,CAACE,OAAN,CAAcC,MAAd,CAAqB,CAACC,KAAD,EAAQC,MAAR,KAAmBD,KAAK,GAAGC,MAAM,CAACC,MAAvD,EAA+D,CAA/D,CAApB;AACA,QAAMC,YAAY,GAAGP,KAAK,CAACQ,QAAN,CAAeL,MAAf,CAAsB,CAACC,KAAD,EAAQK,OAAR,KAAoBL,KAAK,GAAGK,OAAO,CAACH,MAA1D,EAAkE,CAAlE,CAArB;AACA,QAAMI,WAAW,GAAGV,KAAK,CAACW,OAAN,CAAcC,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACC,SAAtC,EAAiDX,MAAjD,CAAwD,CAACC,KAAD,EAAQS,MAAR,KAAmBT,KAAK,GAAGS,MAAM,CAACP,MAA1F,EAAkG,CAAlG,CAApB;AACA,QAAMS,SAAS,GAAGf,KAAK,CAACgB,KAAN,CAAYJ,MAAZ,CAAmBK,IAAI,IAAIA,IAAI,CAACH,SAAhC,EAA2CX,MAA3C,CAAkD,CAACC,KAAD,EAAQa,IAAR,KAAiBb,KAAK,GAAGa,IAAI,CAACX,MAAhF,EAAwF,CAAxF,CAAlB;AAEA,SACI,0CACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGL,WAAW,GAAGM,YAA5B;AAA2C,IAAA,KAAK,EAAC,cAAjD;AAAgE,IAAA,IAAI,EAAC,gCAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGN,WAAW,GAAGM,YAAd,GAA6BG,WAA7B,GAA2CK,SAAzD;AAAqE,IAAA,KAAK,EAAC,cAA3E;AAA0F,IAAA,IAAI,EAAC,gCAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGL,WAAd;AAA4B,IAAA,KAAK,EAAC,gBAAlC;AAAmD,IAAA,IAAI,EAAC,qCAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGK,SAAd;AAA0B,IAAA,KAAK,EAAC,cAAhC;AAA+C,IAAA,IAAI,EAAC,qCAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH;;AAED,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHjB,IAAAA,OAAO,EAAEiB,KAAK,CAACjB,OAAN,CAAcU,MAAd,CAAqBP,MAAM,IAAI,CAACA,MAAM,CAACe,SAAvC,CADN;AAEHZ,IAAAA,QAAQ,EAAEW,KAAK,CAACX,QAAN,CAAeI,MAAf,CAAsBH,OAAO,IAAI,CAACA,OAAO,CAACW,SAA1C,CAFP;AAGHT,IAAAA,OAAO,EAAEQ,KAAK,CAACR,OAAN,CAAcC,MAAd,CAAqBC,MAAM,IAAI,CAACA,MAAM,CAACO,SAAvC,CAHN;AAIHJ,IAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYJ,MAAZ,CAAmBK,IAAI,IAAI,CAACA,IAAI,CAACG,SAAjC;AAJJ,GAAP;AAMH,CAPD;;AASA,eAAevB,OAAO,CAACqB,eAAD,CAAP,CAAyBnB,UAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport Card from './Card'\n\nfunction TotalMoney(props) {\n    const totalIncome = props.incomes.reduce((total, income) => total + income.amount, 0)\n    const totalExpense = props.expenses.reduce((total, expense) => total + expense.amount, 0)\n    const totalBorrow = props.borrows.filter(borrow => borrow.isPending).reduce((total, borrow) => total + borrow.amount, 0)\n    const totalLend = props.lends.filter(lend => lend.isPending).reduce((total, lend) => total + lend.amount, 0)\n    \n    return (\n        <>\n            <Card total={ totalIncome - totalExpense } title=\"Total Saving\" body=\"This is all you save till now.\" />\n            <Card total={ totalIncome - totalExpense + totalBorrow - totalLend } title=\"Cash on Hand\" body=\"Total money you have with you.\" />\n            <Card total={ totalBorrow } title=\"Borrowed Money\" body=\"This is what you have to give back.\" />\n            <Card total={ totalLend } title=\"Lended Money\" body=\"This is what you have to take back.\" />\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        incomes: state.incomes.filter(income => !income.isTrashed),\n        expenses: state.expenses.filter(expense => !expense.isTrashed),\n        borrows: state.borrows.filter(borrow => !borrow.isTrashed),\n        lends: state.lends.filter(lend => !lend.isTrashed)\n    }\n}\n\nexport default connect(mapStateToProps)(TotalMoney)"]},"metadata":{},"sourceType":"module"}