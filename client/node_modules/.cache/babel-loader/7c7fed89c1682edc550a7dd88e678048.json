{"ast":null,"code":"import _classCallCheck from\"/home/shash/web-dev/playground/heroku/moneymath_heroku/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/shash/web-dev/playground/heroku/moneymath_heroku/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/shash/web-dev/playground/heroku/moneymath_heroku/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/shash/web-dev/playground/heroku/moneymath_heroku/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/shash/web-dev/playground/heroku/moneymath_heroku/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import{FaCheck}from'react-icons/fa';import{startAddCategory}from'../../../actions/categoryAction';var AddCategory=/*#__PURE__*/function(_React$Component){_inherits(AddCategory,_React$Component);function AddCategory(props){var _this;_classCallCheck(this,AddCategory);_this=_possibleConstructorReturn(this,_getPrototypeOf(AddCategory).call(this,props));_this.handleChange=function(e){_this.setState({name:e.target.value});};_this.handleSubmit=function(){var formData={name:_this.state.name,type:_this.props.type};if(_this.state.name){_this.props.dispatch(startAddCategory(formData));_this.props.handleAddForm('AC-form','none');_this.setState({name:''});}else{_this.setState({nameError:'* Field required.'});}};_this.state={name:'',nameError:''};return _this;}_createClass(AddCategory,[{key:\"render\",value:function render(){var style=this.state.nameError?{borderColor:'red'}:{};return React.createElement(\"div\",{id:\"AC-form\",style:style},React.createElement(\"input\",{placeholder:\"Enter new category\",value:this.state.name,onChange:this.handleChange}),React.createElement(\"button\",{type:\"button\",onClick:this.handleSubmit},React.createElement(FaCheck,null)));}}]);return AddCategory;}(React.Component);export default connect()(AddCategory);","map":{"version":3,"sources":["/home/shash/web-dev/playground/heroku/moneymath_heroku/client/src/components/money-math/SideBar/AddCategory.js"],"names":["React","connect","FaCheck","startAddCategory","AddCategory","props","handleChange","e","setState","name","target","value","handleSubmit","formData","state","type","dispatch","handleAddForm","nameError","style","borderColor","Component"],"mappings":"8tBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,OAAT,KAAwB,gBAAxB,CACA,OAASC,gBAAT,KAAiC,iCAAjC,C,GAEMC,CAAAA,W,iFACF,qBAAYC,KAAZ,CAAmB,6CACf,6EAAMA,KAAN,GADe,MAOnBC,YAPmB,CAOJ,SAAAC,CAAC,CAAI,CAChB,MAAKC,QAAL,CAAc,CACVC,IAAI,CAAEF,CAAC,CAACG,MAAF,CAASC,KADL,CAAd,EAGH,CAXkB,OAYnBC,YAZmB,CAYJ,UAAM,CACjB,GAAMC,CAAAA,QAAQ,CAAG,CACbJ,IAAI,CAAE,MAAKK,KAAL,CAAWL,IADJ,CAEbM,IAAI,CAAE,MAAKV,KAAL,CAAWU,IAFJ,CAAjB,CAIA,GAAG,MAAKD,KAAL,CAAWL,IAAd,CAAoB,CAChB,MAAKJ,KAAL,CAAWW,QAAX,CAAoBb,gBAAgB,CAACU,QAAD,CAApC,EACA,MAAKR,KAAL,CAAWY,aAAX,CAAyB,SAAzB,CAAoC,MAApC,EACA,MAAKT,QAAL,CAAc,CAAEC,IAAI,CAAE,EAAR,CAAd,EACH,CAJD,IAIO,CACH,MAAKD,QAAL,CAAc,CAAEU,SAAS,CAAE,mBAAb,CAAd,EACH,CACJ,CAxBkB,CAEf,MAAKJ,KAAL,CAAa,CACTL,IAAI,CAAE,EADG,CAETS,SAAS,CAAE,EAFF,CAAb,CAFe,aAMlB,C,+DAmBQ,CACL,GAAMC,CAAAA,KAAK,CAAG,KAAKL,KAAL,CAAWI,SAAX,CAAuB,CAAEE,WAAW,CAAE,KAAf,CAAvB,CAAgD,EAA9D,CACA,MACI,4BAAK,EAAE,CAAC,SAAR,CAAkB,KAAK,CAAED,KAAzB,EACI,6BAAO,WAAW,CAAC,oBAAnB,CAAwC,KAAK,CAAG,KAAKL,KAAL,CAAWL,IAA3D,CAAkE,QAAQ,CAAG,KAAKH,YAAlF,EADJ,CAEI,8BAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAG,KAAKM,YAArC,EAAqD,oBAAC,OAAD,MAArD,CAFJ,CADJ,CAMH,C,yBAlCqBZ,KAAK,CAACqB,S,EAqChC,cAAepB,CAAAA,OAAO,GAAGG,WAAH,CAAtB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { FaCheck } from 'react-icons/fa'\nimport { startAddCategory } from '../../../actions/categoryAction'\n\nclass AddCategory extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            nameError: ''\n        }\n    }\n    handleChange = e => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n    handleSubmit = () => {\n        const formData = {\n            name: this.state.name,\n            type: this.props.type\n        }\n        if(this.state.name) {\n            this.props.dispatch(startAddCategory(formData))\n            this.props.handleAddForm('AC-form', 'none')\n            this.setState({ name: ''})\n        } else {\n            this.setState({ nameError: '* Field required.'})\n        }\n    }\n    render() {\n        const style = this.state.nameError ? { borderColor: 'red' } : {}\n        return (\n            <div id=\"AC-form\" style={style} >\n                <input placeholder=\"Enter new category\" value={ this.state.name } onChange={ this.handleChange } />\n                <button type=\"button\" onClick={ this.handleSubmit } ><FaCheck /></button>\n            </div>\n        )\n    }\n}\n\nexport default connect()(AddCategory)"]},"metadata":{},"sourceType":"module"}