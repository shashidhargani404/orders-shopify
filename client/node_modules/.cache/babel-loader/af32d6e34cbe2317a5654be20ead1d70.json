{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{startEditOrder}from'../../actoins/ordersAction';import CustomerEditForm from'./CustomerEditForm';function CustomerEdit(props){var handleSubmit=function handleSubmit(formData){props.dispatch(startEditOrder(formData,props));};return props.order?React.createElement(CustomerEditForm,Object.assign({},props.order,{handleSubmit:handleSubmit})):'';}var mapStateToProps=function mapStateToProps(state,props){return{order:state.orders.find(function(order){return order._id===props.match.params.id;})};};export default connect(mapStateToProps)(CustomerEdit);","map":{"version":3,"sources":["/home/shash/web-dev/playground/heroku/shopify/client/src/components/Order/CustomerEdit.js"],"names":["React","connect","startEditOrder","CustomerEditForm","CustomerEdit","props","handleSubmit","formData","dispatch","order","mapStateToProps","state","orders","find","_id","match","params","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,cAAT,KAA+B,4BAA/B,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CACzB,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,QAAQ,CAAI,CAC7BF,KAAK,CAACG,QAAN,CAAeN,cAAc,CAACK,QAAD,CAAWF,KAAX,CAA7B,EACH,CAFD,CAGA,MACIA,CAAAA,KAAK,CAACI,KAAN,CAAc,oBAAC,gBAAD,kBAAsBJ,KAAK,CAACI,KAA5B,EAAmC,YAAY,CAAEH,YAAjD,GAAd,CAAkF,EADtF,CAGH,CAED,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQN,KAAR,CAAkB,CACtC,MAAO,CACHI,KAAK,CAAEE,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkB,SAAAJ,KAAK,QAAIA,CAAAA,KAAK,CAACK,GAAN,GAAcT,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBC,EAArC,EAAvB,CADJ,CAAP,CAGH,CAJD,CAMA,cAAehB,CAAAA,OAAO,CAACS,eAAD,CAAP,CAAyBN,YAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { startEditOrder } from '../../actoins/ordersAction'\n\nimport CustomerEditForm from './CustomerEditForm'\n\nfunction CustomerEdit(props) {\n    const handleSubmit = formData => {\n        props.dispatch(startEditOrder(formData, props))\n    }\n    return (\n        props.order ? <CustomerEditForm {...props.order} handleSubmit={handleSubmit} /> : ''\n    )\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        order: state.orders.find(order => order._id === props.match.params.id )\n    }\n}\n\nexport default connect(mapStateToProps)(CustomerEdit)"]},"metadata":{},"sourceType":"module"}