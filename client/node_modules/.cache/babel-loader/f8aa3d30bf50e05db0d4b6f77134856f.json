{"ast":null,"code":"var _jsxFileName = \"/home/shash/web-dev/playground/heroku/moneymath_heroku/client/src/components/money-math/Container/IEBLs/StatementsListing.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { MdStarBorder, MdCheckBoxOutlineBlank, MdCheckBox, MdEdit, MdDelete, MdRestore } from 'react-icons/md';\nimport { FaEye } from 'react-icons/fa';\nimport { IoIosCheckmarkCircle, IoIosSave, IoMdStar, IoIosCloseCircle } from 'react-icons/io';\nimport { startEditIncome, startTrashAndStarIncomes, startDeleteTrashIncomes } from '../../../../actions/incomeAction';\nimport { startEditExpense, startTrashAndStarExpenses, startDeleteTrashExpenses } from '../../../../actions/expenseAction';\nimport { startEditBorrow, startTrashAndStarBorrows, startDeleteTrashBorrows } from '../../../../actions/borrowAction';\nimport { startEditLend, startTrashAndStarLends, startDeleteTrashLends } from '../../../../actions/lendAction';\n\nclass StatementsListing extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = (editId, amount, category, description) => {\n      this.setState({\n        editId,\n        amount,\n        category,\n        description\n      });\n    };\n\n    this.handleAllSelects = () => {\n      this.setState({\n        selects: this.state.selects.length === this.state.statements.filter(statement => statement.isTrashed === this.state.isTrashList).length ? [] : this.state.statements.filter(statement => statement.isTrashed === this.state.isTrashList).map(statement => statement._id)\n      }, () => {\n        console.log(this.state.selects);\n      });\n    };\n\n    this.handleSelects = id => {\n      this.setState(prevState => {\n        return {\n          selects: prevState.selects.includes(id) ? prevState.selects.filter(select => select !== id) : [...prevState.selects, id]\n        };\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleFilterCategory = e => {\n      const value = e.target.value;\n      this.setState(() => ({\n        filterCategory: value,\n        statements: value ? this.props.statements.filter(statement => statement.category._id === value) : this.props.statements,\n        selects: []\n      }));\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            editId = _this$state.editId,\n            amount = _this$state.amount,\n            category = _this$state.category,\n            description = _this$state.description;\n      const formData = {\n        amount,\n        category,\n        description\n      };\n\n      switch (this.props.type) {\n        case 'income':\n          {\n            this.props.dispatch(startEditIncome(editId, formData));\n            break;\n          }\n\n        case 'expense':\n          {\n            this.props.dispatch(startEditExpense(editId, formData));\n            break;\n          }\n\n        case 'borrow':\n          {\n            this.props.dispatch(startEditBorrow(editId, formData));\n            break;\n          }\n\n        case 'lend':\n          {\n            this.props.dispatch(startEditLend(editId, formData));\n            break;\n          }\n      }\n\n      this.setState({\n        editId: '',\n        amount: '',\n        category: '',\n        description: ''\n      });\n    };\n\n    this.handleTrashAndFav = (propType, value, id) => {\n      const selects = id ? [id] : this.state.selects;\n\n      switch (this.props.type) {\n        case 'income':\n          {\n            this.props.dispatch(startTrashAndStarIncomes({\n              selects,\n              propType,\n              value\n            }));\n            break;\n          }\n\n        case 'expense':\n          {\n            this.props.dispatch(startTrashAndStarExpenses({\n              selects,\n              propType,\n              value\n            }));\n            break;\n          }\n\n        case 'borrow':\n          {\n            this.props.dispatch(startTrashAndStarBorrows({\n              selects,\n              propType,\n              value\n            }));\n            break;\n          }\n\n        case 'lend':\n          {\n            this.props.dispatch(startTrashAndStarLends({\n              selects,\n              propType,\n              value\n            }));\n            break;\n          }\n      }\n    };\n\n    this.handleDeleteTrash = id => {\n      const selects = id ? [id] : this.state.selects;\n\n      switch (this.props.type) {\n        case 'income':\n          {\n            this.props.dispatch(startDeleteTrashIncomes({\n              selects\n            }));\n            break;\n          }\n\n        case 'expense':\n          {\n            this.props.dispatch(startDeleteTrashExpenses({\n              selects\n            }));\n            break;\n          }\n\n        case 'borrow':\n          {\n            this.props.dispatch(startDeleteTrashBorrows({\n              selects\n            }));\n            break;\n          }\n\n        case 'lend':\n          {\n            this.props.dispatch(startDeleteTrashLends({\n              selects\n            }));\n            break;\n          }\n      }\n    };\n\n    this.handleTrashAndStarList = (propType, value) => {\n      this.setState({\n        [propType]: value,\n        selects: []\n      });\n    };\n\n    this.state = {\n      isTrashList: false,\n      isStarList: false,\n      statements: props.statements,\n      filterCategory: '',\n      editId: '',\n      amount: '',\n      category: '',\n      description: '',\n      selects: []\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      statements: nextProps.statements\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          isTrashList = _this$state2.isTrashList,\n          isStarList = _this$state2.isStarList,\n          statements = _this$state2.statements,\n          selects = _this$state2.selects,\n          filterCategory = _this$state2.filterCategory,\n          editId = _this$state2.editId,\n          amount = _this$state2.amount,\n          category = _this$state2.category,\n          description = _this$state2.description;\n    return statements.length ? React.createElement(\"div\", {\n      id: this.props.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"statement-top-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleAllSelects,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \" \", statements.filter(statement => statement.isTrashed === isTrashList).length === selects.length ? React.createElement(MdCheckBox, {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }) : React.createElement(MdCheckBoxOutlineBlank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), isTrashList ? React.createElement(\"button\", {\n      onClick: () => this.handleDeleteTrash(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(MdDelete, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })) : React.createElement(\"button\", {\n      onClick: () => this.handleTrashAndFav('isTrashed', true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(MdDelete, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"select\", {\n      value: filterCategory,\n      onChange: this.handleFilterCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"All\"), this.props.categories.filter(category => category.type === this.props.type).map(category => {\n      return React.createElement(\"option\", {\n        key: category._id,\n        value: category._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, category.name);\n    })), React.createElement(\"button\", {\n      onClick: () => this.handleTrashAndStarList('isStarList', !isStarList),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, isStarList ? React.createElement(IoMdStar, {\n      style: {\n        color: 'gold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }) : React.createElement(MdStarBorder, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), \" \"), React.createElement(\"button\", {\n      onClick: () => this.handleTrashAndStarList('isTrashList', !isTrashList),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, isTrashList ? React.createElement(MdDelete, {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }) : React.createElement(MdDelete, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, statements.filter(statement => statement.isTrashed === isTrashList && (isStarList ? statement.isStarred : true)).map(statement => {\n      const bgColor = statement.isPending ? {\n        backgroundColor: '#c2dbff'\n      } : {};\n      return React.createElement(\"li\", {\n        style: bgColor,\n        id: \"statement\",\n        key: statement._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"statement-icons\",\n        onClick: () => this.handleSelects(statement._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, selects.includes(statement._id) ? React.createElement(MdCheckBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }) : React.createElement(MdCheckBoxOutlineBlank, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"statement-icons\",\n        onClick: () => this.handleTrashAndFav('isStarred', !statement.isStarred, statement._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, statement.isStarred ? React.createElement(IoMdStar, {\n        style: {\n          color: 'gold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }) : React.createElement(MdStarBorder, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), editId === statement._id ? React.createElement(\"input\", {\n        className: \"statement-amount-input\",\n        autoComplete: \"off\",\n        name: \"amount\",\n        value: amount,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        id: \"statement-amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"$ \", statement.amount), React.createElement(\"div\", {\n        id: \"statement-dscp-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"statement-catg-dscp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, editId === statement._id ? React.createElement(\"select\", {\n        className: \"statement-catg-select\",\n        name: \"category\",\n        value: category,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.props.categories.filter(category => category.type === this.props.type.toLowerCase()).map(category => {\n        return React.createElement(\"option\", {\n          name: \"category\",\n          value: category._id,\n          key: category._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, category.name);\n      })) : React.createElement(\"p\", {\n        id: \"statement-catg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, statement.category.name), editId === statement._id ? React.createElement(\"textarea\", {\n        className: \"statement-dscp-textarea\",\n        name: \"description\",\n        value: description,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        id: \"statement-dscp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, statement.description)), React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          height: 'fit-content'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"statement-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, statement.createdAt.slice(0, 10)), React.createElement(\"button\", {\n        className: \"statement-button statement-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(FaEye, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), isTrashList ? React.createElement(\"button\", {\n        className: \"statement-button statement-icons\",\n        onClick: () => this.handleDeleteTrash(statement._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(MdDelete, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })) : editId === statement._id ? React.createElement(\"button\", {\n        id: \"statement-edit-bt\",\n        className: \"statement-button statement-icons\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(IoIosSave, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })) : React.createElement(\"button\", {\n        className: \"statement-button statement-icons\",\n        onClick: () => {\n          this.handleClick(statement._id, statement.amount, statement.category._id, statement.description);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(MdEdit, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"statement-button statement-icons\",\n        onClick: () => this.handleTrashAndFav('isTrashed', !isTrashList, statement._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, isTrashList ? React.createElement(MdRestore, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }) : React.createElement(MdDelete, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })), this.props.type === 'borrow' || this.props.type === 'lend' ? React.createElement(\"button\", {\n        className: \"statement-button statement-icons\",\n        onClick: () => this.handleTrashAndFav('isPending', !statement.isPending, statement._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, statement.isPending ? React.createElement(IoIosCheckmarkCircle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }) : React.createElement(IoIosCloseCircle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })) : '')));\n    }))) : React.createElement(\"p\", {\n      id: this.props.type,\n      className: \"no-statement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"No statements are available. Add one to See.\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories\n  };\n};\n\nexport default connect(mapStateToProps)(StatementsListing);","map":{"version":3,"sources":["/home/shash/web-dev/playground/heroku/moneymath_heroku/client/src/components/money-math/Container/IEBLs/StatementsListing.js"],"names":["React","connect","MdStarBorder","MdCheckBoxOutlineBlank","MdCheckBox","MdEdit","MdDelete","MdRestore","FaEye","IoIosCheckmarkCircle","IoIosSave","IoMdStar","IoIosCloseCircle","startEditIncome","startTrashAndStarIncomes","startDeleteTrashIncomes","startEditExpense","startTrashAndStarExpenses","startDeleteTrashExpenses","startEditBorrow","startTrashAndStarBorrows","startDeleteTrashBorrows","startEditLend","startTrashAndStarLends","startDeleteTrashLends","StatementsListing","Component","constructor","props","handleClick","editId","amount","category","description","setState","handleAllSelects","selects","state","length","statements","filter","statement","isTrashed","isTrashList","map","_id","console","log","handleSelects","id","prevState","includes","select","handleChange","e","target","name","value","handleFilterCategory","filterCategory","handleSubmit","formData","type","dispatch","handleTrashAndFav","propType","handleDeleteTrash","handleTrashAndStarList","isStarList","componentWillReceiveProps","nextProps","render","color","categories","isStarred","bgColor","isPending","backgroundColor","toLowerCase","display","height","createdAt","slice","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,sBAAvB,EAA+CC,UAA/C,EAA2DC,MAA3D,EAAmEC,QAAnE,EAA6EC,SAA7E,QAA8F,gBAA9F;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,oBAAT,EAA+BC,SAA/B,EAA0CC,QAA1C,EAAoDC,gBAApD,QAA4E,gBAA5E;AACA,SAASC,eAAT,EAA0BC,wBAA1B,EAAoDC,uBAApD,QAAmF,kCAAnF;AACA,SAASC,gBAAT,EAA2BC,yBAA3B,EAAsDC,wBAAtD,QAAsF,mCAAtF;AACA,SAASC,eAAT,EAA0BC,wBAA1B,EAAoDC,uBAApD,QAAmF,kCAAnF;AACA,SAASC,aAAT,EAAwBC,sBAAxB,EAAgDC,qBAAhD,QAA6E,gCAA7E;;AAGA,MAAMC,iBAAN,SAAgCzB,KAAK,CAAC0B,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcnBC,WAdmB,GAcL,CAACC,MAAD,EAASC,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,KAA2C;AACrD,WAAKC,QAAL,CAAc;AAACJ,QAAAA,MAAD;AAASC,QAAAA,MAAT;AAAiBC,QAAAA,QAAjB;AAA2BC,QAAAA;AAA3B,OAAd;AACH,KAhBkB;;AAAA,SAiBnBE,gBAjBmB,GAiBA,MAAM;AACrB,WAAKD,QAAL,CAAc;AACVE,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAAX,CAAmBE,MAAnB,KAA8B,KAAKD,KAAL,CAAWE,UAAX,CAAsBC,MAAtB,CAA6BC,SAAS,IAAIA,SAAS,CAACC,SAAV,KAAwB,KAAKL,KAAL,CAAWM,WAA7E,EAA0FL,MAAxH,GAAiI,EAAjI,GAAsI,KAAKD,KAAL,CAAWE,UAAX,CAAsBC,MAAtB,CAA6BC,SAAS,IAAIA,SAAS,CAACC,SAAV,KAAwB,KAAKL,KAAL,CAAWM,WAA7E,EAA0FC,GAA1F,CAA8FH,SAAS,IAAIA,SAAS,CAACI,GAArH;AADrI,OAAd,EAEG,MAAM;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWD,OAAvB;AACH,OAJD;AAKH,KAvBkB;;AAAA,SAwBnBY,aAxBmB,GAwBHC,EAAE,IAAI;AAClB,WAAKf,QAAL,CAAegB,SAAD,IAAe;AACzB,eAAO;AACHd,UAAAA,OAAO,EAAEc,SAAS,CAACd,OAAV,CAAkBe,QAAlB,CAA2BF,EAA3B,IAAiCC,SAAS,CAACd,OAAV,CAAkBI,MAAlB,CAAyBY,MAAM,IAAIA,MAAM,KAAKH,EAA9C,CAAjC,GAAqF,CAAC,GAAGC,SAAS,CAACd,OAAd,EAAuBa,EAAvB;AAD3F,SAAP;AAGH,OAJD;AAKH,KA9BkB;;AAAA,SA+BnBI,YA/BmB,GA+BJC,CAAC,IAAI;AAChB,WAAKpB,QAAL,CAAc;AACV,SAACoB,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AADhB,OAAd;AAGH,KAnCkB;;AAAA,SAoCnBC,oBApCmB,GAoCIJ,CAAC,IAAI;AAAA,YAChBG,KADgB,GACNH,CAAC,CAACC,MADI,CAChBE,KADgB;AAExB,WAAKvB,QAAL,CAAc,OAAO;AACjByB,QAAAA,cAAc,EAAEF,KADC;AAEjBlB,QAAAA,UAAU,EAAEkB,KAAK,GAAG,KAAK7B,KAAL,CAAWW,UAAX,CAAsBC,MAAtB,CAA6BC,SAAS,IAAIA,SAAS,CAACT,QAAV,CAAmBa,GAAnB,KAA2BY,KAArE,CAAH,GAAiF,KAAK7B,KAAL,CAAWW,UAF5F;AAGjBH,QAAAA,OAAO,EAAE;AAHQ,OAAP,CAAd;AAKH,KA3CkB;;AAAA,SA4CnBwB,YA5CmB,GA4CJ,MAAM;AAAA,0BACiC,KAAKvB,KADtC;AAAA,YACTP,MADS,eACTA,MADS;AAAA,YACDC,MADC,eACDA,MADC;AAAA,YACOC,QADP,eACOA,QADP;AAAA,YACiBC,WADjB,eACiBA,WADjB;AAEjB,YAAM4B,QAAQ,GAAG;AAAE9B,QAAAA,MAAF;AAAUC,QAAAA,QAAV;AAAoBC,QAAAA;AAApB,OAAjB;;AACA,cAAO,KAAKL,KAAL,CAAWkC,IAAlB;AACI,aAAK,QAAL;AAAe;AACX,iBAAKlC,KAAL,CAAWmC,QAAX,CAAoBlD,eAAe,CAACiB,MAAD,EAAS+B,QAAT,CAAnC;AACA;AACH;;AACD,aAAK,SAAL;AAAgB;AACZ,iBAAKjC,KAAL,CAAWmC,QAAX,CAAoB/C,gBAAgB,CAACc,MAAD,EAAS+B,QAAT,CAApC;AACA;AACH;;AACD,aAAK,QAAL;AAAe;AACX,iBAAKjC,KAAL,CAAWmC,QAAX,CAAoB5C,eAAe,CAACW,MAAD,EAAS+B,QAAT,CAAnC;AACA;AACH;;AACD,aAAK,MAAL;AAAa;AACT,iBAAKjC,KAAL,CAAWmC,QAAX,CAAoBzC,aAAa,CAACQ,MAAD,EAAS+B,QAAT,CAAjC;AACA;AACH;AAhBL;;AAkBA,WAAK3B,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,MAAM,EAAE,EAAtB;AAA0BC,QAAAA,QAAQ,EAAE,EAApC;AAAwCC,QAAAA,WAAW,EAAE;AAArD,OAAd;AACH,KAlEkB;;AAAA,SAmEnB+B,iBAnEmB,GAmEC,CAACC,QAAD,EAAWR,KAAX,EAAkBR,EAAlB,KAAyB;AACzC,YAAMb,OAAO,GAAGa,EAAE,GAAG,CAACA,EAAD,CAAH,GAAU,KAAKZ,KAAL,CAAWD,OAAvC;;AACA,cAAO,KAAKR,KAAL,CAAWkC,IAAlB;AACI,aAAK,QAAL;AAAe;AACX,iBAAKlC,KAAL,CAAWmC,QAAX,CAAoBjD,wBAAwB,CAAC;AAAEsB,cAAAA,OAAF;AAAW6B,cAAAA,QAAX;AAAqBR,cAAAA;AAArB,aAAD,CAA5C;AACA;AACH;;AACD,aAAK,SAAL;AAAgB;AACZ,iBAAK7B,KAAL,CAAWmC,QAAX,CAAoB9C,yBAAyB,CAAC;AAAEmB,cAAAA,OAAF;AAAW6B,cAAAA,QAAX;AAAqBR,cAAAA;AAArB,aAAD,CAA7C;AACA;AACH;;AACD,aAAK,QAAL;AAAe;AACX,iBAAK7B,KAAL,CAAWmC,QAAX,CAAoB3C,wBAAwB,CAAC;AAAEgB,cAAAA,OAAF;AAAW6B,cAAAA,QAAX;AAAqBR,cAAAA;AAArB,aAAD,CAA5C;AACA;AACH;;AACD,aAAK,MAAL;AAAa;AACT,iBAAK7B,KAAL,CAAWmC,QAAX,CAAoBxC,sBAAsB,CAAC;AAAEa,cAAAA,OAAF;AAAW6B,cAAAA,QAAX;AAAqBR,cAAAA;AAArB,aAAD,CAA1C;AACA;AACH;AAhBL;AAkBH,KAvFkB;;AAAA,SAyFnBS,iBAzFmB,GAyFEjB,EAAD,IAAQ;AACxB,YAAMb,OAAO,GAAGa,EAAE,GAAG,CAACA,EAAD,CAAH,GAAU,KAAKZ,KAAL,CAAWD,OAAvC;;AACA,cAAO,KAAKR,KAAL,CAAWkC,IAAlB;AACI,aAAK,QAAL;AAAe;AACX,iBAAKlC,KAAL,CAAWmC,QAAX,CAAoBhD,uBAAuB,CAAC;AAACqB,cAAAA;AAAD,aAAD,CAA3C;AACA;AACH;;AACD,aAAK,SAAL;AAAgB;AACZ,iBAAKR,KAAL,CAAWmC,QAAX,CAAoB7C,wBAAwB,CAAC;AAACkB,cAAAA;AAAD,aAAD,CAA5C;AACA;AACH;;AACD,aAAK,QAAL;AAAe;AACX,iBAAKR,KAAL,CAAWmC,QAAX,CAAoB1C,uBAAuB,CAAC;AAACe,cAAAA;AAAD,aAAD,CAA3C;AACA;AACH;;AACD,aAAK,MAAL;AAAa;AACT,iBAAKR,KAAL,CAAWmC,QAAX,CAAoBvC,qBAAqB,CAAC;AAACY,cAAAA;AAAD,aAAD,CAAzC;AACA;AACH;AAhBL;AAkBH,KA7GkB;;AAAA,SA+GnB+B,sBA/GmB,GA+GM,CAACF,QAAD,EAAWR,KAAX,KAAqB;AAC1C,WAAKvB,QAAL,CAAc;AAAE,SAAC+B,QAAD,GAAYR,KAAd;AAAqBrB,QAAAA,OAAO,EAAE;AAA9B,OAAd;AACH,KAjHkB;;AAEf,SAAKC,KAAL,GAAa;AACTM,MAAAA,WAAW,EAAE,KADJ;AAETyB,MAAAA,UAAU,EAAE,KAFH;AAGT7B,MAAAA,UAAU,EAAEX,KAAK,CAACW,UAHT;AAIToB,MAAAA,cAAc,EAAE,EAJP;AAKT7B,MAAAA,MAAM,EAAE,EALC;AAMTC,MAAAA,MAAM,EAAE,EANC;AAOTC,MAAAA,QAAQ,EAAE,EAPD;AAQTC,MAAAA,WAAW,EAAE,EARJ;AASTG,MAAAA,OAAO,EAAE;AATA,KAAb;AAWH;;AAqGDiC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,SAAKpC,QAAL,CAAc;AAAEK,MAAAA,UAAU,EAAE+B,SAAS,CAAC/B;AAAxB,KAAd;AACH;;AACDgC,EAAAA,MAAM,GAAG;AAAA,yBAC2G,KAAKlC,KADhH;AAAA,UACGM,WADH,gBACGA,WADH;AAAA,UACgByB,UADhB,gBACgBA,UADhB;AAAA,UAC4B7B,UAD5B,gBAC4BA,UAD5B;AAAA,UACwCH,OADxC,gBACwCA,OADxC;AAAA,UACiDuB,cADjD,gBACiDA,cADjD;AAAA,UACiE7B,MADjE,gBACiEA,MADjE;AAAA,UACyEC,MADzE,gBACyEA,MADzE;AAAA,UACiFC,QADjF,gBACiFA,QADjF;AAAA,UAC2FC,WAD3F,gBAC2FA,WAD3F;AAEL,WACIM,UAAU,CAACD,MAAX,GACI;AAAK,MAAA,EAAE,EAAE,KAAKV,KAAL,CAAWkC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAK3B,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA4CI,UAAU,CAACC,MAAX,CAAkBC,SAAS,IAAIA,SAAS,CAACC,SAAV,KAAwBC,WAAvD,EAAoEL,MAApE,KAA+EF,OAAO,CAACE,MAAvF,GAAgG,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACkC,QAAAA,KAAK,EAAE;AAAR,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhG,GAA0I,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtL,CADJ,EAGM7B,WAAW,GACT;AAAQ,MAAA,OAAO,EAAG,MAAM,KAAKuB,iBAAL,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApD,CADS,GAGT;AAAQ,MAAA,OAAO,EAAG,MAAM,KAAKF,iBAAL,CAAuB,WAAvB,EAAoC,IAApC,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtE,CANR,EAQI;AAAQ,MAAA,KAAK,EAAEL,cAAf;AAA+B,MAAA,QAAQ,EAAG,KAAKD,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAGQ,KAAK9B,KAAL,CAAW6C,UAAX,CAAsBjC,MAAtB,CAA6BR,QAAQ,IAAIA,QAAQ,CAAC8B,IAAT,KAAkB,KAAKlC,KAAL,CAAWkC,IAAtE,EAA4ElB,GAA5E,CAAgFZ,QAAQ,IAAI;AACxF,aAAO;AAAQ,QAAA,GAAG,EAAEA,QAAQ,CAACa,GAAtB;AAA2B,QAAA,KAAK,EAAEb,QAAQ,CAACa,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmDb,QAAQ,CAACwB,IAA5D,CAAP;AACH,KAFD,CAHR,CARJ,EAiBI;AAAQ,MAAA,OAAO,EAAG,MAAM,KAAKW,sBAAL,CAA4B,YAA5B,EAA0C,CAACC,UAA3C,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoFA,UAAU,GAAG,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAT,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA2C,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzI,MAjBJ,EAkBI;AAAQ,MAAA,OAAO,EAAG,MAAM,KAAKL,sBAAL,CAA4B,aAA5B,EAA2C,CAACxB,WAA5C,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqFA,WAAW,GAAG,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAC6B,QAAAA,KAAK,EAAE;AAAR,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAyC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzI,CAlBJ,CADJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIjC,UAAU,CAACC,MAAX,CAAkBC,SAAS,IAAIA,SAAS,CAACC,SAAV,KAAwBC,WAAxB,KAAwCyB,UAAU,GAAG3B,SAAS,CAACiC,SAAb,GAAyB,IAA3E,CAA/B,EAAiH9B,GAAjH,CAAqHH,SAAS,IAAI;AAC9H,YAAMkC,OAAO,GAAGlC,SAAS,CAACmC,SAAV,GAAsB;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAtB,GAAuD,EAAvE;AACA,aACI;AAAI,QAAA,KAAK,EAAEF,OAAX;AAAoB,QAAA,EAAE,EAAC,WAAvB;AAAmC,QAAA,GAAG,EAAElC,SAAS,CAACI,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAG,MAAM,KAAKG,aAAL,CAAmBP,SAAS,CAACI,GAA7B,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2FT,OAAO,CAACe,QAAR,CAAiBV,SAAS,CAACI,GAA3B,IAAkC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlC,GAAmD,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9I,CADJ,EAEI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAG,MAAM,KAAKmB,iBAAL,CAAwB,WAAxB,EAAqC,CAACvB,SAAS,CAACiC,SAAhD,EAA2DjC,SAAS,CAACI,GAArE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoIJ,SAAS,CAACiC,SAAV,GAAsB,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtB,GAA8D,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlM,CAFJ,EAGM1C,MAAM,KAAKW,SAAS,CAACI,GAArB,GAA2B;AAAO,QAAA,SAAS,EAAC,wBAAjB;AAA0C,QAAA,YAAY,EAAC,KAAvD;AAA6D,QAAA,IAAI,EAAC,QAAlE;AAA2E,QAAA,KAAK,EAAEd,MAAlF;AAA0F,QAAA,QAAQ,EAAE,KAAKsB,YAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,GAAuJ;AAAG,QAAA,EAAE,EAAC,kBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA4BZ,SAAS,CAACV,MAAtC,CAH7J,EAII;AAAK,QAAA,EAAE,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,EAAE,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMD,MAAM,KAAKW,SAAS,CAACI,GAArB,GACE;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,IAAI,EAAC,UAA/C;AAA0D,QAAA,KAAK,EAAEb,QAAjE;AAA2E,QAAA,QAAQ,EAAE,KAAKqB,YAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKzB,KAAL,CAAW6C,UAAX,CAAsBjC,MAAtB,CAA6BR,QAAQ,IAAIA,QAAQ,CAAC8B,IAAT,KAAmB,KAAKlC,KAAL,CAAWkC,IAAZ,CAAkBgB,WAAlB,EAA3D,EAA4FlC,GAA5F,CAAgGZ,QAAQ,IAAI;AACxG,eAAO;AAAQ,UAAA,IAAI,EAAC,UAAb;AAAwB,UAAA,KAAK,EAAEA,QAAQ,CAACa,GAAxC;AAA6C,UAAA,GAAG,EAAEb,QAAQ,CAACa,GAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmEb,QAAQ,CAACwB,IAA5E,CAAP;AACH,OAFD,CAFR,CADF,GAQE;AAAG,QAAA,EAAE,EAAC,gBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBf,SAAS,CAACT,QAAV,CAAmBwB,IAA3C,CATR,EAUM1B,MAAM,KAAKW,SAAS,CAACI,GAArB,GAA2B;AAAU,QAAA,SAAS,EAAC,yBAApB;AAA8C,QAAA,IAAI,EAAC,aAAnD;AAAiE,QAAA,KAAK,EAAEZ,WAAxE;AAAqF,QAAA,QAAQ,EAAE,KAAKoB,YAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,GAA4J;AAAG,QAAA,EAAE,EAAC,gBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBZ,SAAS,CAACR,WAAlC,CAVlK,CADJ,EAaI;AAAK,QAAA,KAAK,EAAE;AAAC8C,UAAAA,OAAO,EAAE,MAAV;AAAkBC,UAAAA,MAAM,EAAE;AAA1B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,EAAE,EAAC,gBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBvC,SAAS,CAACwC,SAAV,CAAoBC,KAApB,CAA0B,CAA1B,EAA4B,EAA5B,CAAxB,CADJ,EAEI;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsD,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtD,CAFJ,EAGMvC,WAAW,GACT;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAqD,QAAA,OAAO,EAAG,MAAM,KAAKuB,iBAAL,CAAuBzB,SAAS,CAACI,GAAjC,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8G,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9G,CADS,GAGTf,MAAM,KAAKW,SAAS,CAACI,GAArB,GAA2B;AAAQ,QAAA,EAAE,EAAC,mBAAX;AAA+B,QAAA,SAAS,EAAC,kCAAzC;AAA4E,QAAA,OAAO,EAAG,KAAKe,YAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2G,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3G,CAA3B,GAA+J;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAqD,QAAA,OAAO,EAAE,MAAM;AAAE,eAAK/B,WAAL,CAAiBY,SAAS,CAACI,GAA3B,EAAgCJ,SAAS,CAACV,MAA1C,EAAkDU,SAAS,CAACT,QAAV,CAAmBa,GAArE,EAA0EJ,SAAS,CAACR,WAApF;AAAiG,SAAvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0K,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1K,CANvK,EAQQ;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAqD,QAAA,OAAO,EAAG,MAAM,KAAK+B,iBAAL,CAAuB,WAAvB,EAAoC,CAACrB,WAArC,EAAkDF,SAAS,CAACI,GAA5D,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0IF,WAAW,GAAG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAmB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxK,CARR,EASK,KAAKf,KAAL,CAAWkC,IAAX,KAAoB,QAApB,IAAgC,KAAKlC,KAAL,CAAWkC,IAAX,KAAoB,MAApD,GAA6D;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAqD,QAAA,OAAO,EAAG,MAAM,KAAKE,iBAAL,CAAuB,WAAvB,EAAoC,CAACvB,SAAS,CAACmC,SAA/C,EAA0DnC,SAAS,CAACI,GAApE,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkJJ,SAAS,CAACmC,SAAV,GAAsB,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtB,GAAiD,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnM,CAA7D,GAAkS,EATvS,CAbJ,CAJJ,CADJ;AAgCH,KAlCD,CAFJ,CArBJ,CADJ,GA8DI;AAAG,MAAA,EAAE,EAAE,KAAKhD,KAAL,CAAWkC,IAAlB;AAAwB,MAAA,SAAS,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDA/DR;AAiEH;;AAzL2C;;AA4LhD,MAAMqB,eAAe,GAAG9C,KAAK,IAAI;AAC7B,SAAO;AACHoC,IAAAA,UAAU,EAAEpC,KAAK,CAACoC;AADf,GAAP;AAGH,CAJD;;AAMA,eAAexE,OAAO,CAACkF,eAAD,CAAP,CAAyB1D,iBAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { MdStarBorder, MdCheckBoxOutlineBlank, MdCheckBox, MdEdit, MdDelete, MdRestore } from 'react-icons/md'\nimport { FaEye } from 'react-icons/fa'\nimport { IoIosCheckmarkCircle, IoIosSave, IoMdStar, IoIosCloseCircle } from 'react-icons/io'\nimport { startEditIncome, startTrashAndStarIncomes, startDeleteTrashIncomes } from '../../../../actions/incomeAction'\nimport { startEditExpense, startTrashAndStarExpenses, startDeleteTrashExpenses } from '../../../../actions/expenseAction'\nimport { startEditBorrow, startTrashAndStarBorrows, startDeleteTrashBorrows } from '../../../../actions/borrowAction'\nimport { startEditLend, startTrashAndStarLends, startDeleteTrashLends } from '../../../../actions/lendAction'\n\n\nclass StatementsListing extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isTrashList: false,\n            isStarList: false,\n            statements: props.statements,\n            filterCategory: '',\n            editId: '',\n            amount: '',\n            category: '',\n            description: '',\n            selects: []\n        }\n    }\n    handleClick = (editId, amount, category, description) => {\n        this.setState({editId, amount, category, description})\n    }\n    handleAllSelects = () => {\n        this.setState({\n            selects: this.state.selects.length === this.state.statements.filter(statement => statement.isTrashed === this.state.isTrashList).length ? [] : this.state.statements.filter(statement => statement.isTrashed === this.state.isTrashList).map(statement => statement._id)\n        }, () => {\n            console.log(this.state.selects)\n        })\n    }\n    handleSelects = id => {\n        this.setState((prevState) => {\n            return {\n                selects: prevState.selects.includes(id) ? prevState.selects.filter(select => select !== id) : [...prevState.selects, id]\n            }\n        })\n    }\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleFilterCategory = e => {\n        const { value } = e.target\n        this.setState(() => ({\n            filterCategory: value,\n            statements: value ? this.props.statements.filter(statement => statement.category._id === value) : this.props.statements,\n            selects: []\n        }))\n    }\n    handleSubmit = () => {\n        const { editId, amount, category, description } = this.state\n        const formData = { amount, category, description }\n        switch(this.props.type) {\n            case 'income': {\n                this.props.dispatch(startEditIncome(editId, formData))\n                break;\n            }\n            case 'expense': {\n                this.props.dispatch(startEditExpense(editId, formData))\n                break;\n            }\n            case 'borrow': {\n                this.props.dispatch(startEditBorrow(editId, formData))\n                break;\n            }\n            case 'lend': {\n                this.props.dispatch(startEditLend(editId, formData))\n                break;\n            }\n        }\n        this.setState({ editId: '', amount: '', category: '', description: ''})\n    }\n    handleTrashAndFav = (propType, value, id) => {\n        const selects = id ? [id] : this.state.selects\n        switch(this.props.type) {\n            case 'income': {\n                this.props.dispatch(startTrashAndStarIncomes({ selects, propType, value }))\n                break;\n            }\n            case 'expense': {\n                this.props.dispatch(startTrashAndStarExpenses({ selects, propType, value }))\n                break;\n            }\n            case 'borrow': {\n                this.props.dispatch(startTrashAndStarBorrows({ selects, propType, value }))\n                break;\n            }\n            case 'lend': {\n                this.props.dispatch(startTrashAndStarLends({ selects, propType, value }))\n                break;\n            }\n        }\n    }\n\n    handleDeleteTrash = (id) => {\n        const selects = id ? [id] : this.state.selects\n        switch(this.props.type) {\n            case 'income': {\n                this.props.dispatch(startDeleteTrashIncomes({selects}))\n                break;\n            }\n            case 'expense': {\n                this.props.dispatch(startDeleteTrashExpenses({selects}))\n                break;\n            }\n            case 'borrow': {\n                this.props.dispatch(startDeleteTrashBorrows({selects}))\n                break;\n            }\n            case 'lend': {\n                this.props.dispatch(startDeleteTrashLends({selects}))\n                break;\n            }\n        }\n    }\n\n    handleTrashAndStarList = (propType, value) => {\n        this.setState({ [propType]: value, selects: [] })\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({ statements: nextProps.statements })\n    }\n    render() {\n        const { isTrashList, isStarList, statements, selects, filterCategory, editId, amount, category, description } = this.state\n        return (\n            statements.length ? (\n                <div id={this.props.type} >\n                    <div id=\"statement-top-div\">\n                        <button onClick={this.handleAllSelects} > { statements.filter(statement => statement.isTrashed === isTrashList).length === selects.length ? <MdCheckBox style={{color: 'black'}} /> : <MdCheckBoxOutlineBlank /> }</button>\n                        \n                        { isTrashList ? (\n                            <button onClick={ () => this.handleDeleteTrash() } ><MdDelete /></button>\n                        ) : (\n                            <button onClick={ () => this.handleTrashAndFav('isTrashed', true ) } ><MdDelete /></button>\n                        )}\n                        <select value={filterCategory} onChange={ this.handleFilterCategory } >\n                            <option value=\"\" >All</option>\n                            {\n                                this.props.categories.filter(category => category.type === this.props.type).map(category => {\n                                    return <option key={category._id} value={category._id} >{ category.name }</option>\n                                })\n                            }\n                        </select>\n\n                        <button onClick={ () => this.handleTrashAndStarList('isStarList', !isStarList) } >{ isStarList ? <IoMdStar style={{ color: 'gold'}} /> : <MdStarBorder /> } </button>\n                        <button onClick={ () => this.handleTrashAndStarList('isTrashList', !isTrashList)} >{ isTrashList ? <MdDelete style={{color: 'red'}} /> : <MdDelete /> }</button>\n                    </div>\n                    <ul>\n                    {\n                        statements.filter(statement => statement.isTrashed === isTrashList && (isStarList ? statement.isStarred : true)).map(statement => {\n                            const bgColor = statement.isPending ? { backgroundColor: '#c2dbff' } : {}\n                            return (\n                                <li style={bgColor} id=\"statement\" key={statement._id}>\n                                    <button className=\"statement-icons\" onClick={ () => this.handleSelects(statement._id) } >{ selects.includes(statement._id) ? <MdCheckBox /> : <MdCheckBoxOutlineBlank /> }</button>\n                                    <button className=\"statement-icons\" onClick={ () => this.handleTrashAndFav( 'isStarred', !statement.isStarred, statement._id )}  >{ statement.isStarred ? <IoMdStar style={{ color: 'gold'}} /> : <MdStarBorder /> }</button>\n                                    { editId === statement._id ? <input className=\"statement-amount-input\" autoComplete=\"off\" name=\"amount\" value={amount} onChange={this.handleChange} /> : <p id=\"statement-amount\">$ {statement.amount}</p> }\n                                    <div id=\"statement-dscp-date\">\n                                        <div id=\"statement-catg-dscp\">\n                                            { editId === statement._id ? (\n                                                <select className=\"statement-catg-select\" name=\"category\" value={category} onChange={this.handleChange}>\n                                                    {\n                                                        this.props.categories.filter(category => category.type === (this.props.type).toLowerCase()).map(category => {\n                                                            return <option name=\"category\" value={category._id} key={category._id} >{ category.name }</option>\n                                                        })\n                                                    }\n                                                </select>\n                                            ) : <p id=\"statement-catg\">{statement.category.name}</p> }\n                                            { editId === statement._id ? <textarea className=\"statement-dscp-textarea\" name=\"description\" value={description} onChange={this.handleChange} ></textarea> : <p id=\"statement-dscp\">{statement.description}</p> }\n                                        </div>\n                                        <div style={{display: 'flex', height: 'fit-content'}}>\n                                            <p id=\"statement-date\">{statement.createdAt.slice(0,10)}</p>\n                                            <button className=\"statement-button statement-icons\" ><FaEye /></button>\n                                            { isTrashList ? (\n                                                <button className=\"statement-button statement-icons\" onClick={ () => this.handleDeleteTrash(statement._id) } ><MdDelete /></button>\n                                            ) : (\n                                                editId === statement._id ? <button id=\"statement-edit-bt\" className=\"statement-button statement-icons\" onClick={ this.handleSubmit } ><IoIosSave /></button> : <button className=\"statement-button statement-icons\" onClick={() => { this.handleClick(statement._id, statement.amount, statement.category._id, statement.description)}} ><MdEdit /></button>\n                                            ) }\n                                                <button className=\"statement-button statement-icons\" onClick={ () => this.handleTrashAndFav('isTrashed', !isTrashList, statement._id)} >{ isTrashList ? <MdRestore /> : <MdDelete /> }</button>\n                                            {this.props.type === 'borrow' || this.props.type === 'lend' ? <button className=\"statement-button statement-icons\" onClick={ () => this.handleTrashAndFav('isPending', !statement.isPending, statement._id)} >{ statement.isPending ? <IoIosCheckmarkCircle /> : <IoIosCloseCircle /> }</button> : '' }\n                                        </div>\n                                    </div>\n                                </li>\n                            )\n                        })\n                    }\n                    </ul>\n                </div>\n            ) : <p id={this.props.type} className=\"no-statement\">No statements are available. Add one to See.</p>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        categories: state.categories\n    }\n}\n\nexport default connect(mapStateToProps)(StatementsListing)"]},"metadata":{},"sourceType":"module"}