{"ast":null,"code":"import axios from '../config/axios';\nexport const setLends = lends => {\n  return {\n    type: 'SET_LENDS',\n    payload: lends\n  };\n};\nexport const startSetLends = () => {\n  return dispatch => {\n    axios.get('/lends', {\n      headers: {\n        'x-auth': localStorage.getItem('x-auth')\n      }\n    }).then(response => {\n      const lends = response.data;\n\n      if (Array.isArray(lends)) {\n        dispatch(setLends(lends));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const addLend = lend => {\n  return {\n    type: 'ADD_LEND',\n    payload: lend\n  };\n};\nexport const startAddLend = formData => {\n  return dispatch => {\n    axios.post('/lends', formData, {\n      headers: {\n        'x-auth': localStorage.getItem('x-auth')\n      }\n    }).then(response => {\n      if (typeof response.data === 'object') {\n        dispatch(addLend(response.data));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst editLend = lend => {\n  return {\n    type: 'EDIT_LEND',\n    payload: lend\n  };\n};\n\nexport const startEditLend = (id, formData) => {\n  return dispatch => {\n    axios.put(`/lends/${id}`, formData, {\n      headers: {\n        'x-auth': localStorage.getItem('x-auth')\n      }\n    }).then(response => {\n      if (typeof response.data === 'object') {\n        dispatch(editLend(response.data));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const startTrashAndStarLends = formData => {\n  return dispatch => {\n    axios.put('/lends', formData, {\n      headers: {\n        'x-auth': localStorage.getItem('x-auth')\n      }\n    }).then(response => {\n      const lends = response.data;\n\n      if (Array.isArray(lends)) {\n        dispatch(setLends(lends));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const startDeleteTrashLends = formData => {\n  return dispatch => {\n    axios.put('/lends_delete', formData, {\n      headers: {\n        'x-auth': localStorage.getItem('x-auth')\n      }\n    }).then(response => {\n      const lends = response.data;\n\n      if (Array.isArray(lends)) {\n        dispatch(setLends(lends));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["/home/shash/web-dev/playground/heroku/demo-money-local/client/src/actions/lendAction.js"],"names":["axios","setLends","lends","type","payload","startSetLends","dispatch","get","headers","localStorage","getItem","then","response","data","Array","isArray","catch","err","console","log","addLend","lend","startAddLend","formData","post","editLend","startEditLend","id","put","startTrashAndStarLends","startDeleteTrashLends"],"mappings":"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","sourcesContent":["import axios from '../config/axios'\n\nexport const setLends = lends => {\n    return {\n        type: 'SET_LENDS',\n        payload: lends\n    }\n}\n\nexport const startSetLends = () => {\n    return (dispatch) => {\n        axios.get('/lends', {\n            headers: {\n                'x-auth': localStorage.getItem('x-auth')\n            }\n        })\n            .then((response) => {\n                const lends = response.data\n                if(Array.isArray(lends)) {\n                    dispatch(setLends(lends))\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n}\n\nexport const addLend = lend => {\n    return {\n        type: 'ADD_LEND',\n        payload: lend\n    }\n}\n\nexport const startAddLend = formData => {\n    return (dispatch) => {\n        axios.post('/lends', formData, {\n            headers: {\n                'x-auth': localStorage.getItem('x-auth')\n            }\n        })\n            .then((response) => {\n                if(typeof response.data === 'object') {\n                    dispatch(addLend(response.data))\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n}\n\nconst editLend = lend => {\n    return {\n        type: 'EDIT_LEND',\n        payload: lend\n    }\n}\n\nexport const startEditLend = ( id, formData ) => {\n    return (dispatch) => {\n        axios.put(`/lends/${id}`, formData, {\n            headers: {\n                'x-auth': localStorage.getItem('x-auth')\n            }\n        })\n            .then((response) => {\n                if(typeof response.data === 'object') {\n                    dispatch(editLend(response.data))\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n}\n\nexport const startTrashAndStarLends = (formData) => {\n    return (dispatch) => {\n        axios.put('/lends', formData, {\n            headers: {\n                'x-auth': localStorage.getItem('x-auth')\n            }\n        })\n            .then((response) => {\n                const lends = response.data\n                if(Array.isArray(lends)) {\n                    dispatch(setLends(lends))\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n}\n\nexport const startDeleteTrashLends = (formData) => {\n    return (dispatch) => {\n        axios.put('/lends_delete', formData , {\n            headers: {\n                'x-auth': localStorage.getItem('x-auth')\n            }\n        })\n            .then((response) => {\n                const lends = response.data\n                if(Array.isArray(lends)) {\n                    dispatch(setLends(lends))\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}