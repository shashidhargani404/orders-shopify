{"ast":null,"code":"import axios from'../config/axios';export var setIncomes=function setIncomes(incomes){return{type:'SET_INCOMES',payload:incomes};};export var startSetIncomes=function startSetIncomes(){return function(dispatch){axios.get('/incomes',{headers:{'x-auth':localStorage.getItem('x-auth')}}).then(function(response){var incomes=response.data;if(Array.isArray(incomes)){dispatch(setIncomes(incomes));}}).catch(function(err){console.log(err);});};};export var addIncome=function addIncome(income){return{type:'ADD_INCOME',payload:income};};export var startAddIncome=function startAddIncome(formData){return function(dispatch){axios.post('/incomes',formData,{headers:{'x-auth':localStorage.getItem('x-auth')}}).then(function(response){if(typeof response.data==='object'){dispatch(addIncome(response.data));}}).catch(function(err){console.log(err);});};};export var editIncome=function editIncome(income){return{type:'EDIT_INCOME',payload:income};};export var startEditIncome=function startEditIncome(id,formData){return function(dispatch){axios.put(\"/incomes/\".concat(id),formData,{headers:{'x-auth':localStorage.getItem('x-auth')}}).then(function(response){if(typeof response.data==='object'){dispatch(editIncome(response.data));}}).catch(function(err){console.log(err);});};};export var startTrashAndStarIncomes=function startTrashAndStarIncomes(formData){return function(dispatch){axios.put('/incomes',formData,{headers:{'x-auth':localStorage.getItem('x-auth')}}).then(function(response){var incomes=response.data;if(Array.isArray(incomes)){dispatch(setIncomes(response.data));}}).catch(function(err){console.log(err);});};};export var startDeleteTrashIncomes=function startDeleteTrashIncomes(formData){return function(dispatch){axios.put('/incomes_delete',formData,{headers:{'x-auth':localStorage.getItem('x-auth')}}).then(function(response){var incomes=response.data;if(Array.isArray(incomes)){dispatch(setIncomes(response.data));}}).catch(function(err){console.log(err);});};};","map":{"version":3,"sources":["/home/shash/web-dev/playground/heroku/demo-money/client/src/actions/incomeAction.js"],"names":["axios","setIncomes","incomes","type","payload","startSetIncomes","dispatch","get","headers","localStorage","getItem","then","response","data","Array","isArray","catch","err","console","log","addIncome","income","startAddIncome","formData","post","editIncome","startEditIncome","id","put","startTrashAndStarIncomes","startDeleteTrashIncomes"],"mappings":"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","sourcesContent":["import axios from '../config/axios'\n\nexport const setIncomes = incomes => {\n    return {\n        type: 'SET_INCOMES',\n        payload: incomes\n    }\n}\n\nexport const startSetIncomes = () => {\n    return (dispatch) => {\n        axios.get('/incomes', {\n            headers: {\n                'x-auth': localStorage.getItem('x-auth')\n            }\n        })\n            .then((response) => {\n                const incomes = response.data\n                if(Array.isArray(incomes)) {\n                    dispatch(setIncomes(incomes))\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n}\n\nexport const addIncome = income => {\n    return {\n        type: 'ADD_INCOME',\n        payload: income\n    }\n}\n\nexport const startAddIncome = formData => {\n    return (dispatch) => {\n        axios.post('/incomes', formData, {\n            headers: {\n                'x-auth': localStorage.getItem('x-auth')\n            }\n        })\n            .then((response) => {\n                if(typeof response.data === 'object') {\n                    dispatch(addIncome(response.data))\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n}\n\nexport const editIncome = income => {\n    return {\n        type: 'EDIT_INCOME',\n        payload: income\n    }\n}\n\nexport const startEditIncome = ( id, formData ) => {\n    return (dispatch) => {\n        axios.put(`/incomes/${id}`, formData, {\n            headers: {\n                'x-auth': localStorage.getItem('x-auth')\n            }\n        })\n            .then((response) => {\n                if(typeof response.data === 'object') {\n                    dispatch(editIncome(response.data))\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n}\n\nexport const startTrashAndStarIncomes = (formData) => {\n    return (dispatch) => {\n        axios.put('/incomes', formData, {\n            headers: {\n                'x-auth': localStorage.getItem('x-auth')\n            }\n        })\n            .then((response) => {\n                const incomes = response.data\n                if(Array.isArray(incomes)) {\n                    dispatch(setIncomes(response.data))\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n}\n\nexport const startDeleteTrashIncomes = (formData) => {\n    return (dispatch) => {\n        axios.put('/incomes_delete', formData , {\n            headers: {\n                'x-auth': localStorage.getItem('x-auth')\n            }\n        })\n            .then((response) => {\n                const incomes = response.data\n                if(Array.isArray(incomes)) {\n                    dispatch(setIncomes(response.data))\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}