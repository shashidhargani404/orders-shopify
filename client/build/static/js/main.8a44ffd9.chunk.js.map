{"version":3,"sources":["components/NavBar/NavBar.js","components/Order/PDF.js","components/Order/Order.js","config/axios.js","actoins/ordersAction.js","components/Order/CustomerEditForm.js","components/Order/CustomerEdit.js","App.js","serviceWorker.js","reducers/orderReducer.js","index.js","store/configureStore.js"],"names":["NavBar","props","className","to","style","fontSize","marginLeft","href","target","genaratePDF","input","document","getElementById","html2canvas","then","canvas","imgHeight","height","width","imgData","toDataURL","pdf","jsPDF","addImage","save","OrderList","handleNewOrders","setState","newOrder","handleSearch","e","str","value","prevState","search","searchItems","searchData","filter","singleData","data","includes","state","nextProps","this","orders","map","order","_id","name","moment","created_at","format","first_name","last_name","total_price","toFixed","length","item","onSubmit","preventDefault","type","placeholder","aria-label","onChange","onClick","generatePDF","role","data-dismiss","aria-hidden","id","backgroundColor","scope","index","key","colSpan","React","Component","connect","axios","Axios","create","baseURL","startEditOrder","formData","dispatch","put","match","params","response","hasOwnProperty","payload","history","push","catch","err","console","log","CustomerEditForm","handleSubmit","email","phone","phoneError","loading","window","alert","handleChange","isNaN","slice","code","validFirstName","validLastName","validEmail","test","validPhone","htmlFor","aria-describedby","position","left","top","find","App","path","component","Order","exact","CustomerEdit","Boolean","location","hostname","ordersInitialState","orderReducer","action","reverse","store","createStore","combineReducers","applyMiddleware","thunk","configureStore","get","Array","isArray","socketIOClient","on","addOrder","element","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a44ffd9.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction NavBar(props) {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark sticky-top\">\n            <Link to=\"/\" className=\"text-decoration-none\" ><span className=\"font-weight-bold text-light\" style={{fontSize: '24px', marginLeft: '34px'}}>Shopify - Book Store Orders</span></Link>\n            <a href=\"https://saahityabookstore.myshopify.com/\" target=\"_blank\" className=\"pr-5 text-light\" >Store</a>\n        </nav>\n    )\n}\n\nexport default NavBar","import html2canvas from 'html2canvas'\nimport jsPDF from 'jspdf'\n\nfunction genaratePDF() {\n    const input = document.getElementById('pdfdiv')\n    html2canvas(input)\n        .then((canvas) => {\n            var imgWidth = 170 \n            var imgHeight = canvas.height * imgWidth / canvas.width\n            const imgData = canvas.toDataURL()\n            const pdf = new jsPDF('p', 'mm', 'a4')\n            const position = 20\n            pdf.addImage(imgData, 'JPEG', 20, position, imgWidth, imgHeight)\n            pdf.save('shopify_orders.pdf')\n        })\n}\n\nexport default genaratePDF","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { FaEdit } from 'react-icons/fa'\nimport moment from 'moment'\n\nimport generatePDF from './PDF'\n\nclass OrderList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newOrder: 0,\n            searchData: [],\n            searchItems: [],\n            search: ''\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            searchData: nextProps.orders.map(order => {\n                return { _id: order._id, data: order.name + ' ' + moment(order.created_at).format('MMM Do YY, h:mm a') + ' ' + order.first_name + ' ' + order.last_name + ' ' + order.total_price.toFixed(2)}\n            })\n        })\n        if(nextProps.orders.length == 1 + this.props.orders.length) {\n            this.setState((prevState) => ({\n                newOrder: prevState.newOrder + 1\n            }))\n        }\n    }\n    handleNewOrders = () => {\n            this.setState(() => ({\n                newOrder: 0\n            }))\n    }\n    handleSearch = (e) => {\n        const str = e.target.value\n        this.setState((prevState) => ({\n            search: str,\n            searchItems: prevState.searchData.filter( singleData => singleData.data.includes(str) && str )\n        }))\n    }\n    render() {\n        const orders = this.state.search.length ? this.props.orders.filter(order => this.state.searchItems.map(item => item._id).includes(order._id)) : this.props.orders\n        return (\n            <div className=\"content-fluid p-5 pt-0\" >\n                <form className=\"d-flex flex-column align-items-start form-inline my-2 my-lg-0\" onSubmit={ (e) => e.preventDefault() } >\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" value={this.state.search} onChange={ this.handleSearch } />\n                    <span className=\"text-secondary mt-1\" style={{fontSize: '14px'}} >* Search by Order, Date, Customer or Total</span>\n                </form>\n                <div className=\"d-flex justify-content-between align-items-center mt-3 mb-2\">\n                    <h6 className=\"m-0\" >Total Orders - { this.props.orders.length }</h6>\n                    <button type=\"button\" className=\"btn btn-info btn-sm\" onClick={generatePDF} >Generate PDF</button>\n                </div>\n                {\n                    this.state.newOrder ? (\n                        <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n                            <strong>Hey congrats,</strong> You got { this.state.newOrder } new order(s).\n                            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={this.handleNewOrders} >\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                    ) : ''\n                }\n                <table id=\"pdfdiv\" className=\"table table-hover\" style={{backgroundColor: 'rgb(240,240,240)'}}>\n                    <thead className=\"bg-secondary text-light\">\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Order</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Customer</th>\n                            <th scope=\"col\">Total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        orders.length ? (\n                            orders.map((order, index) => {\n                                return (\n                                    <tr key={order._id}>\n                                        <th scope=\"row\">{ index + 1 }</th>\n                                        <td>{ order.name }</td>\n                                        <td> { moment(order.created_at).format('MMM Do YY, h:mm a') } </td>\n                                        <td>{ order.first_name + ' ' + order.last_name }\n                                            <Link to={`/customers/${order._id}`}><FaEdit className=\"ml-2\" /></Link>\n                                        </td>\n                                        <td>{ order.total_price.toFixed(2) }</td>\n                                    </tr>\n                                )\n                            })\n                        ) : (\n                            <tr>\n                                <td colSpan=\"5\" className=\"text-center\" >No orders found</td>\n                            </tr>\n                        )\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.orders\n    }\n}\n\nexport default connect(mapStateToProps)(OrderList)","import Axios from 'axios'\n\nconst axios = Axios.create({\n    baseURL: '/'\n})\n\nexport default axios","import axios from \"../config/axios\"\n\nconst setOrders = (orders) => {\n    return {\n        type: 'SET_ORDERS',\n        payload: orders\n    }\n}\n\nexport const startSetOrders = () => {\n    return (dispatch) => {\n        axios.get('/orders')\n            .then((response) => {\n                if(Array.isArray(response.data)) {\n                    dispatch(setOrders(response.data))\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })     \n    }\n}\n\nexport const addOrder = (order) => {\n    return {\n        type: 'ADD_ORDER',\n        payload: order\n    }\n}\n\nconst editOrder = (order) => {\n    return {\n        type: 'EDIT_ORDER',\n        payload: order\n    }\n}\n\nexport const startEditOrder = (formData, props) => {\n    return (dispatch) => {\n        axios.put(`/orders/${props.match.params.id}`, formData)\n            .then((response) => {\n                if(response.data.hasOwnProperty('email')){\n                    dispatch(editOrder(response.data))\n                    props.history.push('/')\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass CustomerEditForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            first_name: props.first_name || '',\n            last_name: props.last_name || '',\n            email: props.email || '',\n            phone: props.phone ? props.phone.slice(3) : '',\n            phoneError: false,\n            code: '+91',\n            loading: false\n        }\n    }\n    handleSubmit = e => {\n        e.preventDefault()\n\n        const { first_name, last_name, email, phone } = this.state\n        const formData = { first_name, last_name, email, phone: '+91' + phone } \n        if( phone && phone.length !== 10) {\n            this.setState({\n                phoneError: true\n            })\n        } else if(last_name && (email || phone)) {\n            this.props.handleSubmit(formData)\n            this.setState({\n                loading: true\n            })\n        } else {\n            window.alert('Fields are required!')\n        }\n    }\n    handleChange = e => {\n        if(e.target.name === 'phone' && !isNaN(e.target.value) && e.target.value.length <= 10) {\n            this.setState({\n                phone: e.target.value    \n            })\n        } else if(e.target.name !== 'phone') {\n            this.setState({\n                [e.target.name]: e.target.value\n            })\n        }\n    }\n    render() {\n        const { first_name, last_name, email, phone, phoneError, code, loading } = this.state\n        const validFirstName = first_name.length > 2 ? \"form-control is-valid\" : \"form-control\"\n        const validLastName = last_name.length > 2 ? \"form-control is-valid\" : \"form-control is-invalid\"\n        const emailValidater = /\\S+@\\S+\\.\\S+/\n        const validEmail = emailValidater.test(email) || phone ? \"form-control is-valid\" : \"form-control is-invalid\"\n        const validPhone = phone.length === 10 || email ? \"form-control is-valid\" : \"form-control is-invalid\"\n        return (\n            <div className=\"container p-4\" style={{width: '500px'}}>\n                <h4 className=\"mb-3\">Edit Customer Details</h4>\n                <hr/>\n                <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                        <label htmlFor=\"first_name\">First name</label>\n                        <input type=\"text\" name=\"first_name\" value={first_name} onChange={this.handleChange} className={validFirstName} id=\"first_name\" aria-describedby=\"first_name\" placeholder=\"First name\"  />\n                        { !first_name ? <p className=\"text-danger mt-2\" style={{fontSize: '13px'}} >* First name NA</p>: ''}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"last_name\">Last name</label>\n                        <input type=\"text\" name=\"last_name\" value={last_name} onChange={this.handleChange} className={validLastName} id=\"last_name\" aria-describedby=\"last_name\" placeholder=\"Last name\"  />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                        <input type=\"email\" name=\"email\" value={email} onChange={this.handleChange} className={validEmail} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email address\" />\n                        { !email ? <p className=\"text-danger mt-2\" style={{fontSize: '14px'}} >* Email NA</p>: ''}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputPhone\">Phone</label>\n                        <div className=\"input-group mb-2\">\n                            <div className=\"input-group-prepend\">\n                                <div className=\"input-group-text\">{ code }</div>\n                            </div>\n                            <input type=\"phone\" name=\"phone\" value={phone} onChange={this.handleChange} className={validPhone} id=\"exampleInputPhone\" placeholder=\"Enter mobile number\" />\n                        </div>\n                        { !phone ? <p className=\"text-danger mt-2\" style={{fontSize: '14px'}} >* Phone number NA.</p> : (\n                            phoneError ? <p className=\"text-danger mt-2\" style={{fontSize: '14px'}} >* It requires 10 digits.</p>: ''\n                        )}\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                </form>\n                {\n                    loading && (\n                        <div className=\"d-flex justify-content-center\" style={{ position: 'fixed', left: '50%', top: '39%'}}>\n                            <div className=\"spinner-border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default connect()(CustomerEditForm)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { startEditOrder } from '../../actoins/ordersAction'\n\nimport CustomerEditForm from './CustomerEditForm'\n\nfunction CustomerEdit(props) {\n    const handleSubmit = formData => {\n        props.dispatch(startEditOrder(formData, props))\n    }\n    return (\n        props.order ? <CustomerEditForm {...props.order} handleSubmit={handleSubmit} /> : ''\n    )\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        order: state.orders.find(order => order._id === props.match.params.id )\n    }\n}\n\nexport default connect(mapStateToProps)(CustomerEdit)","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport NavBar from './components/NavBar/NavBar'\nimport Order from './components/Order/Order'\nimport CustomerEdit from './components/Order/CustomerEdit'\n\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <NavBar />\n\n      <Route path=\"/\" component={Order} exact={true} />\n      <Route path=\"/customers/:id\" component={ CustomerEdit } />\n    </BrowserRouter>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ordersInitialState = []\n\nconst orderReducer = (state = ordersInitialState, action) => {\n    switch(action.type) {\n        case 'SET_ORDERS': {\n            return action.payload.reverse()\n        }\n        case 'ADD_ORDER': {\n            return [action.payload, ...state]\n        }\n        case 'EDIT_ORDER': {\n            return state.map(order => {\n                return order._id === action.payload._id ? action.payload : order\n            })\n        }\n        default: {\n            return [...state]\n        }\n    }\n}\n\nexport default orderReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\nimport socketIOClient from 'socket.io-client'\n\nimport configureStore from './store/configureStore'\nimport { startSetOrders, addOrder } from './actoins/ordersAction'\n\nconst store = configureStore()\nstore.dispatch(startSetOrders())\n\nconst socket = socketIOClient('/')\nsocket.on('new order', (order) => {\nstore.dispatch(addOrder(order))\n})\n\nconst element = (\n    <Provider store={store} >\n        <App />\n    </Provider>\n)\n\nReactDOM.render(element, document.getElementById('root'));\n\nserviceWorker.unregister()","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport orderReducer from '../reducers/orderReducer'\n\nconst configureStore = () => {\n    const store = createStore(combineReducers({\n        orders: orderReducer\n    }), applyMiddleware(thunk))\n    return store\n}\n\nexport default configureStore"],"sourceRoot":""}