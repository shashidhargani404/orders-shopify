{"version":3,"sources":["components/NavBar/NavBar.js","components/Order/Order.js","config/axios.js","actoins/ordersAction.js","components/Order/CustomerEditForm.js","components/Order/CustomerEdit.js","App.js","serviceWorker.js","reducers/orderReducer.js","index.js","store/configureStore.js"],"names":["NavBar","props","className","to","style","fontSize","marginLeft","href","target","OrderList","state","newOrder","nextProps","orders","length","this","setState","setTimeout","class","role","backgroundColor","scope","map","order","index","key","_id","name","moment","created_at","format","first_name","last_name","total_price","toFixed","React","Component","connect","axios","Axios","create","baseURL","startEditOrder","formData","dispatch","put","match","params","id","then","response","data","hasOwnProperty","type","payload","history","push","catch","err","console","log","CustomerEditForm","handleSubmit","e","preventDefault","email","phone","loading","window","alert","handleChange","isNaN","value","slice","code","validFirstName","validLastName","validEmail","test","validPhone","width","onSubmit","htmlFor","onChange","aria-describedby","placeholder","position","left","top","find","App","path","component","Order","exact","CustomerEdit","Boolean","location","hostname","ordersInitialState","orderReducer","action","reverse","store","createStore","combineReducers","applyMiddleware","thunk","configureStore","get","Array","isArray","socketIOClient","on","addOrder","element","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2a9df83.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction NavBar(props) {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark sticky-top\">\n            <Link to=\"/\" className=\"text-decoration-none\" ><span className=\"font-weight-bold text-light\" style={{fontSize: '24px', marginLeft: '30px'}}>Shopify - Book Store Orders</span></Link>\n            <a href=\"https://saahityabookstore.myshopify.com/\" target=\"_blank\" className=\"pr-4 text-light\" >Store</a>\n        </nav>\n    )\n}\n\nexport default NavBar","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { FaEdit } from 'react-icons/fa'\nimport moment from 'moment'\n\nclass OrderList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newOrder: false\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.orders.length == 1 + this.props.orders.length) {\n            this.setState({\n                newOrder: true\n            })\n            setTimeout(() => {\n                this.setState({\n                    newOrder: false\n                })\n            }, 10000)\n        }\n    }\n    render() {\n        return (\n            <div className=\"p-5\" >\n                <h3 className=\"pb-2\" >Total Orders - { this.props.orders.length }</h3>\n                <div>\n                \n                </div>\n                {\n                    this.state.newOrder ? (\n                        <div class=\"alert alert-primary\" role=\"alert\">\n                            Hey congrats, You got a new order!\n                        </div>\n                    ) : ''\n                }\n                <table className=\"table table-hover\" style={{backgroundColor: 'rgb(240,240,240)'}}>\n                    <thead className=\"bg-secondary text-light\">\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Order</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Customer</th>\n                            <th scope=\"col\">Total</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.props.orders.map((order, index) => {\n                            return (\n                                    <tr key={order._id}>\n                                        <th scope=\"row\">{ index + 1 }</th>\n                                        <td>{ order.name }</td>\n                                        <td> { moment(order.created_at).format('MMM Do YY, h:mm a') } </td>\n                                        <td>{ order.first_name + ' ' + order.last_name }\n                                            <Link to={`/customers/${order._id}`}><FaEdit className=\"ml-2\" /></Link>\n                                        </td>\n                                        <td>{ order.total_price.toFixed(2) }</td>\n                                    </tr>\n                            )\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.orders\n    }\n}\n\nexport default connect(mapStateToProps)(OrderList)","import Axios from 'axios'\n\nconst axios = Axios.create({\n    baseURL: '/'\n})\n\nexport default axios","import axios from \"../config/axios\"\n\nconst setOrders = (orders) => {\n    return {\n        type: 'SET_ORDERS',\n        payload: orders\n    }\n}\n\nexport const startSetOrders = () => {\n    return (dispatch) => {\n        axios.get('/orders')\n            .then((response) => {\n                if(Array.isArray(response.data)) {\n                    dispatch(setOrders(response.data))\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })     \n    }\n}\n\nexport const addOrder = (order) => {\n    return {\n        type: 'ADD_ORDER',\n        payload: order\n    }\n}\n\nconst editOrder = (order) => {\n    return {\n        type: 'EDIT_ORDER',\n        payload: order\n    }\n}\n\nexport const startEditOrder = (formData, props) => {\n    return (dispatch) => {\n        axios.put(`/orders/${props.match.params.id}`, formData)\n            .then((response) => {\n                if(response.data.hasOwnProperty('email')){\n                    dispatch(editOrder(response.data))\n                    props.history.push('/')\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass CustomerEditForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            first_name: props.first_name || '',\n            last_name: props.last_name || '',\n            email: props.email || '',\n            phone: props.phone ? props.phone.slice(3) : '',\n            code: '+91',\n            loading: false\n        }\n    }\n    handleSubmit = e => {\n        e.preventDefault()\n\n        const { first_name, last_name, email, phone } = this.state\n        const formData = { first_name, last_name, email, phone: '+91' + phone } \n        if(last_name && (email || phone)) {\n            this.props.handleSubmit(formData)\n            this.setState({\n                loading: true\n            })\n        } else {\n            window.alert('Fields are required!')\n        }\n    }\n    handleChange = e => {\n        if(e.target.name === 'phone' && !isNaN(e.target.value) && e.target.value.length <= 10) {\n            this.setState({\n                phone: e.target.value    \n            })\n        } else if(e.target.name !== 'phone') {\n            this.setState({\n                [e.target.name]: e.target.value\n            })\n        }\n    }\n    render() {\n        const { first_name, last_name, email, phone, code, loading } = this.state\n        const validFirstName = first_name.length > 2 ? \"form-control is-valid\" : \"form-control\"\n        const validLastName = last_name.length > 2 ? \"form-control is-valid\" : \"form-control is-invalid\"\n        const emailValidater = /\\S+@\\S+\\.\\S+/\n        const validEmail = emailValidater.test(email) ? \"form-control is-valid\" : \"form-control is-invalid\"\n        const validPhone = phone.length == 10 ? \"form-control is-valid\" : \"form-control is-invalid\"\n        return (\n            <div className=\"container p-4\" style={{width: '500px'}}>\n                <h4 className=\"mb-3\">Edit Customer Details</h4>\n                <hr/>\n                <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                        <label htmlFor=\"first_name\">First name</label>\n                        <input type=\"text\" name=\"first_name\" value={first_name} onChange={this.handleChange} className={validFirstName} id=\"first_name\" aria-describedby=\"first_name\" placeholder=\"First name\"  />\n                        { !first_name ? <p className=\"text-danger mt-2\" style={{fontSize: '13px'}} >* First name NA</p>: ''}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"last_name\">Last name</label>\n                        <input type=\"text\" name=\"last_name\" value={last_name} onChange={this.handleChange} className={validLastName} id=\"last_name\" aria-describedby=\"last_name\" placeholder=\"Last name\"  />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                        <input type=\"email\" name=\"email\" value={email} onChange={this.handleChange} className={validEmail} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email address\" />\n                        { !email ? <p className=\"text-danger mt-2\" style={{fontSize: '14px'}} >* Email NA</p>: ''}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputPhone\">Phone</label>\n                        <div className=\"input-group mb-2\">\n                            <div className=\"input-group-prepend\">\n                                <div className=\"input-group-text\">{ code }</div>\n                            </div>\n                            <input type=\"phone\" name=\"phone\" value={phone} onChange={this.handleChange} className={validPhone} id=\"exampleInputPhone\" placeholder=\"Enter mobile number\" />\n                        </div>\n                        { !phone ? <p className=\"text-danger mt-2\" style={{fontSize: '14px'}} >* Phone number NA</p>: ''}\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                </form>\n                {\n                    loading && (\n                        <div className=\"d-flex justify-content-center\" style={{ position: 'fixed', left: '50%', top: '39%'}}>\n                            <div className=\"spinner-border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default connect()(CustomerEditForm)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { startEditOrder } from '../../actoins/ordersAction'\n\nimport CustomerEditForm from './CustomerEditForm'\n\nfunction CustomerEdit(props) {\n    const handleSubmit = formData => {\n        props.dispatch(startEditOrder(formData, props))\n    }\n    return (\n        props.order ? <CustomerEditForm {...props.order} handleSubmit={handleSubmit} /> : ''\n    )\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        order: state.orders.find(order => order._id === props.match.params.id )\n    }\n}\n\nexport default connect(mapStateToProps)(CustomerEdit)","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport NavBar from './components/NavBar/NavBar'\nimport Order from './components/Order/Order'\nimport CustomerEdit from './components/Order/CustomerEdit'\n\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <NavBar />\n\n      <Route path=\"/\" component={Order} exact={true} />\n      <Route path=\"/customers/:id\" component={ CustomerEdit } />\n    </BrowserRouter>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ordersInitialState = []\n\nconst orderReducer = (state = ordersInitialState, action) => {\n    switch(action.type) {\n        case 'SET_ORDERS': {\n            return action.payload.reverse()\n        }\n        case 'ADD_ORDER': {\n            return [action.payload, ...state]\n        }\n        case 'EDIT_ORDER': {\n            return state.map(order => {\n                return order._id === action.payload._id ? action.payload : order\n            })\n        }\n        default: {\n            return [...state]\n        }\n    }\n}\n\nexport default orderReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\nimport socketIOClient from 'socket.io-client'\n\nimport configureStore from './store/configureStore'\nimport { startSetOrders, addOrder } from './actoins/ordersAction'\n\nconst store = configureStore()\nstore.dispatch(startSetOrders())\n\nconst socket = socketIOClient('/')\nsocket.on('new order', (order) => {\nstore.dispatch(addOrder(order))\n})\n\nconst element = (\n    <Provider store={store} >\n        <App />\n    </Provider>\n)\n\nReactDOM.render(element, document.getElementById('root'));\n\nserviceWorker.unregister()","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport orderReducer from '../reducers/orderReducer'\n\nconst configureStore = () => {\n    const store = createStore(combineReducers({\n        orders: orderReducer\n    }), applyMiddleware(thunk))\n    return store\n}\n\nexport default configureStore"],"sourceRoot":""}